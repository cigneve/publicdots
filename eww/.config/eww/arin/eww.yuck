;; **
;; ** Widgets config for EWW
;; ** Created by : @adi1090x
;; **

;; ** Variables ***********************************************************************

;; Workspace vars
(defpoll WMS :interval "500ms" `bspc query -D -d focused --names`)

;; Time vars
(defpoll TIME :interval "5s" `date +\"%I:%M %p\"`)
(defpoll DATE :interval "5s" `date +\"%A, %B %d\"`)

;; Music vars
(defpoll SONG :interval "1s" `scripts/music_info --song`)
(defpoll ARTIST :interval "1s" `scripts/music_info --artist`)
(defpoll COVER :interval "1s" `scripts/music_info --cover`)
(defpoll STATUS :interval "1s" `scripts/music_info --status`)
(defpoll CTIME :interval "1s" `scripts/music_info --ctime`)
(defpoll TTIME :interval "1s" `scripts/music_info --ttime`)

;; Updates vars
(defpoll UPDATES :interval "15m" `~/.config/bspwm/scripts/updates.sh`)

;; Volume vars
(defpoll VOLICON :interval "1s" `scripts/volume --icon`)
(defpoll VOLUME :interval "1s" `scripts/volume --get`)

;; Network
(defpoll WIFIICON :interval "10s" `scripts/check-network --icon`)
(defpoll NETSTAT :interval "10s" `scripts/check-network --stat`)

;; User
(defvar IMAGE "images/zombie.svg")
(defpoll USER :interval "10m" `whoami`)

;; ** Widgets *************************************************************************

;; search
(defwidget search [] 
		(box :class "dockbox"
			(box :orientation "h" :spacing 15 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
				(button :style "background-image: url('images/icons/dashboard.png');" :class "genicon" :onclick "scripts/widget_search --menu")
				(label :class "workspace" :halign "start" :text WMS))))

;; apps
(defwidget apps [] 
		(box :class "dockbox"
			(box :orientation "h" :spacing 15 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
				(button :style "background-image: url('images/icons/apps/zombie.png');" :class "appicon" :onclick "scripts/widget_apps --zo")
				(button :style "background-image: url('images/icons/apps/terminal.png');" :class "appicon" :onclick "scripts/widget_apps --tr")
				(button :style "background-image: url('images/icons/apps/firefox.png');" :class "appicon" :onclick "scripts/widget_apps --ff")
				(button :style "background-image: url('images/icons/apps/files.png');" :class "appicon" :onclick "scripts/widget_apps --fm")
				(button :style "background-image: url('images/icons/apps/notes.png');" :class "appicon" :onclick "scripts/widget_apps --ge")
				(button :style "background-image: url('images/icons/apps/telegram.png');" :class "appicon" :onclick "scripts/widget_apps --tg"))))

;; weather
(defwidget weather [] 
		(box :class "dockbox"
			(box :class "clockbox" :orientation "v" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
				(label :class "time" :halign "start" :wrap "true" :limit-width 25 :text TIME)
				(label :class "date" :halign "start" :wrap "true" :limit-width 25 :text DATE))))

;; music
(defwidget music [] 
		(box :class "dockbox"
			(box :orientation "h" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
				(box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${COVER}');")
				(box :class "musicbox" :orientation "v" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
					(label :class "song" :halign "start" :wrap "false" :limit-width 18 :text SONG)
					(label :class "artist" :halign "start" :wrap "false" :limit-width 18 :text ARTIST))
			(box :class "musictime" :orientation "v" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
					(label :class "ctime" :halign "start" :wrap "false" :limit-width 5 :text CTIME)
					(label :class "ttime" :halign "start" :wrap "false" :limit-width 5 :text TTIME)))
			(box :class "musicbuttons" :orientation "h" :spacing 10 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
				(button :style "background-image: url('images/icons/music/previous-button.png');" :class "trackbutton" :onclick "scripts/music_info --prev")
				(button :style "background-image: url('${STATUS}');" :class "playbutton" :onclick "scripts/music_info --toggle")
				(button :style "background-image: url('images/icons/music/next-button.png');" :class "trackbutton" :onclick "scripts/music_info --next"))))

;; system
(defwidget system [] 
		(box :class "dockbox"
			 (box :orientation "h" :spacing 16 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
				 (button :onclick "scripts/widget_apps --up"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('images/icons/system/pac_man.png');" :class "trayicon")
							(label :class "mails" :halign "start" :text UPDATES)))
				;; (button :onclick "scripts/widget_apps --pow"
					;; (box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						;; (box :style "background-image: url('${BATICON}');" :class "trayicon")
							;; (label :class "infotext" :halign "start" :text BATPERC)))	
					(button :onclick "scripts/volume --toggle"
					    (box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						    (box :style "background-image: url('${VOLICON}');" :class "trayicon")
							    (label :class "infotext" :halign "start" :text VOLUME)))
				(button :onclick "scripts/widget_apps --nm"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${WIFIICON}');" :class "trayicon")
							(label :class "infotext" :halign "start" :text NETSTAT)))
				(button :onclick "sidedar/toggle_sidebar"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${IMAGE}');" :class "face")
							(label :class "infotext" :halign "start" :text USER))))))

;; ** Windows *************************************************************************

;; search
(defwindow search
           :monitor 0
           :geometry (geometry :x "30px"
                               :y "15px"
                               :width "100px"
                               :height "45px"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "desktop"
           :wm-ignore false
           
        
(search))

;; apps
(defwindow apps
           :monitor 0
           :geometry (geometry :x "150px"
                               :y "15px"
                               :width "300px"
                               :height "45px"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")                                                                 
           :windowtype "desktop"
           :wm-ignore false
(apps))

;; weather
(defwindow weather
           :monitor 0
           :geometry (geometry :x "950px"
                               :y "15px"
                               :width "180px"
                               :height "45px"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "desktop"
           :wm-ignore false
(weather))

;; music
(defwindow music
           :monitor 0
           :geometry (geometry :x "470px"
                               :y "15px"
                               :width "460px"
                               :height "45px"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "desktop"
           :wm-ignore false
(music))

;; system
(defwindow system
           :monitor 0
           :geometry (geometry :x "1150px"
                               :y "15px"
                               :width "420px"
                               :height "45px"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "desktop"
           :wm-ignore false
(system))
